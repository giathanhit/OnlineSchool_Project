// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineSchool_Project.Data;

#nullable disable

namespace OnlineSchool_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231215094749_add-db")]
    partial class adddb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.BaiHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChuongHocsId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocsId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("longtext");

                    b.Property<string>("TenBaiHoc")
                        .HasColumnType("longtext");

                    b.Property<string>("UrlBaiTap")
                        .HasColumnType("longtext");

                    b.Property<string>("UrlVideo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ChuongHocsId");

                    b.HasIndex("KhoaHocsId");

                    b.ToTable("BaiHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.ChuongHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocsId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("longtext");

                    b.Property<string>("TenChuongHoc")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("KhoaHocsId");

                    b.ToTable("ChuongHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.DangKyKhoaHoc", b =>
                {
                    b.Property<float?>("GiaKhoaHoc")
                        .HasColumnType("float");

                    b.Property<int>("GiangVienId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHoc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("SoLuongKhoaHoc")
                        .HasColumnType("int");

                    b.HasIndex("GiangVienId");

                    b.HasIndex("KhoaHocId");

                    b.ToTable("DangKyKhoaHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.DanhGiaKhoaHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ChiTietDanhGia")
                        .HasColumnType("longtext");

                    b.Property<int>("DiemDanhGia")
                        .HasColumnType("int");

                    b.Property<int>("HocViensId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HocViensId");

                    b.HasIndex("KhoaHocsId");

                    b.ToTable("DanhGiaMonHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.GiangVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BangCap")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DiaChi")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("longtext");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NganhHocsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Sdt")
                        .HasColumnType("longtext");

                    b.Property<string>("UrlImage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NganhHocsId");

                    b.ToTable("GiangViens");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.HocVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BangCap")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DiaChi")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("longtext");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Sdt")
                        .HasColumnType("longtext");

                    b.Property<string>("UrlImage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("HocViens");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.KhoaHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("HinhThuc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NganhHocsId")
                        .HasColumnType("int");

                    b.Property<string>("TenKhoaHoc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UrlImage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NganhHocsId");

                    b.ToTable("KhoaHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.NganhHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TenNganh")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("NganhHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.TaiKhoan", b =>
                {
                    b.Property<string>("TenDangNhap")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoaiTaiKhoan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TenDangNhap");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.ThamGiaKhoaHoc", b =>
                {
                    b.Property<int>("HocVienId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("HocVienId");

                    b.HasIndex("KhoaHocId");

                    b.ToTable("ThamGiaKhoaHocs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.BaiHoc", b =>
                {
                    b.HasOne("OnlineSchool_Project.Models.ChuongHoc", "ChuongHocs")
                        .WithMany()
                        .HasForeignKey("ChuongHocsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineSchool_Project.Models.KhoaHoc", "KhoaHocs")
                        .WithMany()
                        .HasForeignKey("KhoaHocsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuongHocs");

                    b.Navigation("KhoaHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.ChuongHoc", b =>
                {
                    b.HasOne("OnlineSchool_Project.Models.KhoaHoc", "KhoaHocs")
                        .WithMany()
                        .HasForeignKey("KhoaHocsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.DangKyKhoaHoc", b =>
                {
                    b.HasOne("OnlineSchool_Project.Models.GiangVien", "GiangViens")
                        .WithMany()
                        .HasForeignKey("GiangVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineSchool_Project.Models.KhoaHoc", "KhoaHocs")
                        .WithMany()
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangViens");

                    b.Navigation("KhoaHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.DanhGiaKhoaHoc", b =>
                {
                    b.HasOne("OnlineSchool_Project.Models.HocVien", "HocViens")
                        .WithMany()
                        .HasForeignKey("HocViensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineSchool_Project.Models.KhoaHoc", "KhoaHocs")
                        .WithMany()
                        .HasForeignKey("KhoaHocsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocViens");

                    b.Navigation("KhoaHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.GiangVien", b =>
                {
                    b.HasOne("OnlineSchool_Project.Models.NganhHoc", "NganhHocs")
                        .WithMany()
                        .HasForeignKey("NganhHocsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NganhHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.KhoaHoc", b =>
                {
                    b.HasOne("OnlineSchool_Project.Models.NganhHoc", "NganhHocs")
                        .WithMany()
                        .HasForeignKey("NganhHocsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NganhHocs");
                });

            modelBuilder.Entity("OnlineSchool_Project.Models.ThamGiaKhoaHoc", b =>
                {
                    b.HasOne("OnlineSchool_Project.Models.HocVien", "HocViens")
                        .WithMany()
                        .HasForeignKey("HocVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineSchool_Project.Models.KhoaHoc", "KhoaHocs")
                        .WithMany()
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocViens");

                    b.Navigation("KhoaHocs");
                });
#pragma warning restore 612, 618
        }
    }
}
